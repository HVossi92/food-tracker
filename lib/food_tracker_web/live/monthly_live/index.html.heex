<head>
  <style>
    .tooltip {
        position: relative;
    }
    .tooltip .tooltip-text {
        visibility: hidden;
        position: absolute;
        z-index: 1;
        bottom: 125%;
        left: 50%;
        transform: translateX(-50%);
        background-color: rgba(0, 0, 0, 0.8);
        color: #fff;
        text-align: center;
        border-radius: 6px;
        padding: 8px 12px;
        width: max-content;
        max-width: 250px;
        opacity: 0;
        transition: opacity 0.3s;
    }
    .tooltip:hover .tooltip-text {
        visibility: visible;
        opacity: 1;
    }
    .tooltip .tooltip-text::after {
        content: "";
        position: absolute;
        top: 100%;
        left: 50%;
        margin-left: -5px;
        border-width: 5px;
        border-style: solid;
        border-color: rgba(0, 0, 0, 0.8) transparent transparent transparent;
    }
  </style>
</head>
<div class="bg-gray-50 dark:bg-gray-900 transition-colors duration-200 flex flex-col">
  <div class="flex-grow">
    <div class="container mx-auto px-4 py-8 max-w-6xl">
      <header class="mb-8">
        <h1 class="text-3xl font-bold text-gray-800 dark:text-white mb-2">Monthly Overview</h1>
      </header>
      
<!-- Month Navigation -->
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-4 mb-8">
        <div class="flex items-center justify-between">
          <a
            href="#"
            phx-click="previous_month"
            class="text-emerald-600 dark:text-emerald-400 hover:text-emerald-800 dark:hover:text-emerald-300"
          >
            <span class="sr-only">Previous month</span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-6 w-6"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M15 19l-7-7 7-7"
              />
            </svg>
          </a>

          <div class="text-center">
            <div class="flex items-center justify-center space-x-3">
              <h2 class="text-xl font-semibold text-gray-800 dark:text-white">
                {@month_name} {@current_month.year}
              </h2>
              <div class="flex space-x-2">
                <a
                  :if={@today.month == @current_month.month && @today.year == @current_month.year}
                  href="#"
                  class="px-2 py-1 rounded text-white text-xs bg-gray-600"
                >
                  Today
                </a>
                <button
                  :if={@today.month != @current_month.month || @today.year != @current_month.year}
                  phx-click="jump_to_today"
                  class="px-2 py-1 rounded text-white text-xs bg-emerald-600"
                >
                  Jump to Today
                </button>
              </div>
            </div>
          </div>

          <a
            href="#"
            phx-click="next_month"
            class="text-emerald-600 dark:text-emerald-400 hover:text-emerald-800 dark:hover:text-emerald-300"
          >
            <span class="sr-only">Next month</span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-6 w-6"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M9 5l7 7-7 7"
              />
            </svg>
          </a>
        </div>
      </div>
      
<!-- Monthly Summary -->
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-4 mb-8">
        <div class="grid grid-cols-2 gap-4">
          <% # Calculate monthly totals
          {monthly_calories, monthly_protein} =
            @food_tracks
            |> Map.values()
            |> Enum.reduce({0, 0}, fn day_tracks, {cal_acc, prot_acc} ->
              {day_calories, day_protein} =
                day_tracks
                |> Enum.reduce({0, 0}, fn track, {track_cal, track_prot} ->
                  cal = if track.calories && track.calories != -1.0, do: track.calories, else: 0
                  prot = if track.protein && track.protein != -1.0, do: track.protein, else: 0
                  {track_cal + cal, track_prot + prot}
                end)

              {cal_acc + day_calories, prot_acc + day_protein}
            end) %>
          <div class="p-4 bg-emerald-50 dark:bg-emerald-900 rounded-lg text-center">
            <h3 class="text-sm font-medium text-gray-500 dark:text-gray-400">Monthly Calories</h3>
            <p class="text-2xl font-bold text-emerald-600 dark:text-emerald-400">
              {monthly_calories} kcal
            </p>
          </div>
          <div class="p-4 bg-blue-50 dark:bg-blue-900 rounded-lg text-center">
            <h3 class="text-sm font-medium text-gray-500 dark:text-gray-400">Monthly Protein</h3>
            <p class="text-2xl font-bold text-blue-600 dark:text-blue-400">
              {monthly_protein} g
            </p>
          </div>
        </div>
      </div>
      
<!-- Calendar View -->
      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6 mb-8">
        <div class="grid grid-cols-7 gap-1 text-center mb-2">
          <div class="text-sm font-medium text-gray-500 dark:text-gray-400 p-2">
            <span class="hidden sm:inline">Sunday</span>
            <span class="sm:hidden">S</span>
          </div>
          <div class="text-sm font-medium text-gray-500 dark:text-gray-400 p-2">
            <span class="hidden sm:inline">Monday</span>
            <span class="sm:hidden">M</span>
          </div>
          <div class="text-sm font-medium text-gray-500 dark:text-gray-400 p-2">
            <span class="hidden sm:inline">Tuesday</span>
            <span class="sm:hidden">T</span>
          </div>
          <div class="text-sm font-medium text-gray-500 dark:text-gray-400 p-2">
            <span class="hidden sm:inline">Wednesday</span>
            <span class="sm:hidden">W</span>
          </div>
          <div class="text-sm font-medium text-gray-500 dark:text-gray-400 p-2">
            <span class="hidden sm:inline">Thursday</span>
            <span class="sm:hidden">T</span>
          </div>
          <div class="text-sm font-medium text-gray-500 dark:text-gray-400 p-2">
            <span class="hidden sm:inline">Friday</span>
            <span class="sm:hidden">F</span>
          </div>
          <div class="text-sm font-medium text-gray-500 dark:text-gray-400 p-2">
            <span class="hidden sm:inline">Saturday</span>
            <span class="sm:hidden">S</span>
          </div>
        </div>
        <div class="grid grid-cols-7 gap-2">
          <% first_day = Date.new!(@current_month.year, @current_month.month, 1)
          last_day = Date.end_of_month(first_day)

          # Calculate the number of padding days from the previous month
          # Adjust to make Sunday = 0
          padding_start = rem(Date.day_of_week(first_day) + 5, 7)

          # Previous month days (for padding)
          prev_month_date = Date.add(first_day, -1)
          prev_month_last_day = prev_month_date.day

          # Calculate days to show from the previous month
          prev_month_days =
            for pad <- (padding_start - 1)..0, pad >= 0 do
              prev_month_last_day - pad
            end

          # Calculate days to show from the next month
          days_shown = padding_start + last_day.day
          # Always show 6 weeks (42 days)
          padding_end = 42 - days_shown

          # Generate next month days (for padding)
          next_month_days =
            for day <- 1..padding_end do
              day
            end %>
          
<!-- Previous month padding days -->
          <%= for day <- prev_month_days do %>
            <div class="h-28 flex flex-col p-2 text-gray-400 dark:text-gray-500 text-sm">
              <span class="mb-1">{day}</span>
            </div>
          <% end %>
          
<!-- Current month days -->
          <%= for day <- 1..last_day.day do %>
            <% current_date = Date.new!(@current_month.year, @current_month.month, day)
            is_today = Date.compare(current_date, @today) == :eq
            day_tracks = Map.get(@food_tracks, day, [])
            has_tracks = length(day_tracks) > 0

            # Determine the CSS class based on whether it's today
            day_class =
              cond do
                is_today -> "bg-emerald-100 dark:bg-emerald-900 border-2 border-emerald-500"
                has_tracks -> "bg-gray-100 dark:bg-gray-700"
                true -> "bg-gray-50 dark:bg-gray-800"
              end %>
            <div
              title={day_tracks |> Enum.map(fn track -> track.name end) |> Enum.join(", ")}
              class={"h-28 flex flex-col p-2 text-gray-700 dark:text-gray-300 text-sm #{day_class} rounded-md hover:bg-gray-200 dark:hover:bg-gray-600 overflow-hidden tooltip"}
            >
              <span class="font-medium mb-1">{day}</span>
              <div class="text-xs text-gray-600 dark:text-gray-400 space-y-1">
                <%= for track <- Enum.take(day_tracks, 3) do %>
                  <div>{track.name}</div>
                <% end %>
                <%= if length(day_tracks) > 3 do %>
                  <div>...</div>
                <% end %>

                <%= if has_tracks do %>
                  <% # Calculate daily totals
                  {total_calories, total_protein} =
                    day_tracks
                    |> Enum.reduce({0, 0}, fn track, {cal_acc, prot_acc} ->
                      cal =
                        if track.calories && track.calories != -1.0, do: track.calories, else: 0

                      prot = if track.protein && track.protein != -1.0, do: track.protein, else: 0
                      {cal_acc + cal, prot_acc + prot}
                    end) %>
                  <%= if total_calories > 0 do %>
                    <div class="mt-1 font-semibold text-emerald-600 dark:text-emerald-400">
                      {total_calories} kcal / {total_protein}g
                    </div>
                  <% end %>
                <% end %>
              </div>
              <%= if has_tracks do %>
                <span class="tooltip-text">
                  <%= for track <- day_tracks do %>
                    <div>
                      {track.name}
                      <%= if track.calories && track.calories != -1.0 do %>
                        ({track.calories} kcal, {track.protein}g protein)
                      <% end %>
                    </div>
                  <% end %>
                </span>
              <% end %>
            </div>
          <% end %>
          
<!-- Next month padding days -->
          <%= for day <- next_month_days do %>
            <div class="h-28 flex flex-col p-2 text-gray-400 dark:text-gray-500 text-sm">
              <span class="mb-1">{day}</span>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</div>
